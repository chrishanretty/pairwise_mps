dat$party
which(dat$party == "")
dat[7,]
dat[7,1:20]
table(dat$party)
table(dat$party, useNA = "always")
table(dat$country)
table(dat$ctry)
names(dat)
dat[1:10,]
table(dat$a_beats_b)
sort(dat$a_beats_b)
any(is.na(dat$a_beats_b))
source("001_tidy_survey_data.R", echo = T)
nrow(dat)
dat[1,]
any(is.na(dat$Party.A))
which(is.na(dat$Party.A))
dat[which(is.na(dat$Party.A)),]
dat[which(is.na(dat$Party.A)), c("MP_A")]
dat[which(is.na(dat$Party.B)), c("MP_B")]
source("001_tidy_survey_data.R", echo = T)
which(is.na(dat$Party.A))
which(is.na(dat$Party.B))
dat[1,]
table(dat$region)
table(dat$party)
table(dat$party)
str(dat)
sample(dat$starttime)
source("001_tidy_survey_data.R", echo = T)
str(dat)
str(dat)
table(dat$self_lr)
table(dat$self_lr)
table(dat$self_lr, useNA = "always")
str(dat)
source("001_tidy_survey_data.R", echo = T)
q()
n
dat$MP_A
dat[1,]
dat[1,]
table(dat$dv)
table(dat$dv, useNA = "always")
which(is.na(dat$dv))
dat[56,]
canon[1,]
grep("Sunak", canon$DisplayName)
grep("SUNAK", canon$DisplayName)
canon[577,]
which(is.na(dat$dv))
dat[3955,]
dat[3955,] |> as.data.frame()
which(is.na(dat$dv))
dat[which(is.na(dat$dv))[1],]
dat[which(is.na(dat$dv))[1],] |> as.data.frame()
is.na(dat$dv)
which(is.na(dat$dv))
dat[56,]
dat[56,] |> as.data.frame()
which(is.na(dat$dv))
dat[56,] |> as.data.frame()
which(is.na(dat$dv))
dat[which(is.na(dat$dv)),] |> as.data.frame()
source("001_tidy_survey_data.R", echo = T)
params$c
str(params)
names(params)
dimnames(params)
fit$draws("c")
params$c
source("002_vanilla_ppc.R", echo = T)
s
dim(y_ppc)
str(y_ppc)
str(y_ppc)
)
dim(props)
head(proprs)
head(props)
head(props)
plot.df[1:10,]
plot.df[1,]
head(plot.df)
dim(plot.df)
plot.df[1:10,]
library(MCMCpack)
foo <- rdirichlet(n = 1000, alpha = rep(1, 5))
hist(foo)
par(mfrow = c(1, 5)); for (i in 1:5) hist(foo[,i])
quantile(rexp(1e6, rate = .1), 0.95)
quantile(rexp(1e6, rate = 10), 0.95)
quantile(rexp(1e6, rate = 5), 0.95)
quantile(rexp(1e6, rate = 2.5), 0.95)
quantile(rexp(1e6, rate = 3), 0.95)
source("002_vanilla_ppc.R", echo = T)
.1 * 4 / 1.6
source("002_vanilla_ppc.R", echo = T)
sqrt(2/pi)
.125 * sqrt(2/pi)
(.125 * sqrt(2)) / sqrt(pi)
(.2 * sqrt(2)) / sqrt(pi)
(.15 * sqrt(2)) / sqrt(pi)
(.13 * sqrt(2)) / sqrt(pi)
(.14 * sqrt(2)) / sqrt(pi)
(.15 * sqrt(2)) / sqrt(pi)
(.2 * sqrt(2)) / sqrt(pi)
(.175 * sqrt(2)) / sqrt(pi)
sqrt(.175)
(.175)^2
.01 * 4
(.01 * 4) / 1.6
source("002_vanilla_ppc.R", echo = T)
s
table(dat$dv)
1.6/4
1.6/4
4 * 1.6
1.6/4
1/0.4
4/1.6
1/2.5
1.96 * .01/2.5
(.01 * 2.5)/1.96
source("002_vanilla_ppc.R", echo = T)
s[1,]
str(s)
s$summary[1:10,]
plot.df[1:10,]
plot.df[1:10,]
canon[1:3,]
plot.df[1,]
fit
source("003_vanilla_model.R", echo = T)
source("003_vanilla_model.R", echo = T)
source("003_vanilla_model.R", echo = T)
source("003_vanilla_model.R")
s
canon[1,]
aux[1,]
names(aux)
canon[1,]
nrow(canon)
nrow(aux)
aux[1:10,]
aux$Region
nrow(aux)
canon$Party
factor(canon$Party)
source("004_augmented_model.R", echo = T)
source("004_augmented_model.R", echo = T)
aux[1,]
data_list
data_list$con19
data_list$lab19
source("004_augmented_model.R", echo = T)
source("004_augmented_model.R", echo = T)
plot.df[1,]
s$summary[1:10,]
source("004_augmented_model.R", echo = T)
hist(plot.df$mean)
source("004_augmented_model.R", echo = T)
source("004_augmented_model.R", echo = T)
source("003_vanilla_model.R", echo = T); source("004_augmented_model.R", echo = T)
pairs(fit, pars = "c")
source("004_augmented_model.R", echo = T)
source("004_augmented_model.R", echo = T)
source("004_augmented_model.R", echo = T)
s <- summary(fit)
s$summary[1:10,]
s2 <- s$summary
s2 |> arrange(n_eff) |> head()
s2 |> as.data.frame() |> arrange(n_eff) |> head()
data_list$N_regions
table(aux$Region)
s[1:!0,]
canon$Party
table(canon$Party)
which(canon$Party == "Independent")
canon[which(canon$Party == "Independent"),]
canon[which(canon$Party == "Speaker"),]
source("004_augmented_model.R", echo = T)
source("004_augmented_model.R", echo = T)
canon[1,]
source("004_augmented_model.R", echo = T)
canon$Party
source("004_augmented_model.R", echo = T)
pairs(fit, pars = "beta")
pairs(fit, pars = c("beta_con19", "beta_lab19"))
pairs(fit, pars = c("beta_con19", "beta_lab19", "sigma_region", "sigma_party", "eta"))
pairs(fit, pars = c("beta_con19", "beta_lab19", "sigma_region", "sigma_party"))
levels(factor(canon$Party))
source("004_augmented_model.R", echo = T)
warnings()
plot.df[1,]
thetas[1:10,]
str(thetas)
dim(thetas)
str(thetas)
dim(ranks)
)
meanranks
meanranks[1:10,]
dim(ranks)
meanranks[1:3,]
dim(thetas)
meanranks[1:!0,]
meanranks[1:10,]
max(ranks)
dim(thetas)
max(ranks)
dim(ranks)
head(meanranks)
head(meanranks)
meanranks[1:3,]
CANON2[1:10,]
canon2[1:!0,]
canon2[1:10,]
canon2$best_guess
table(canon2$best_guess)
thetas[1:10,]
mean(theta)
mean(thetas)
plot.df[1:!0,]
plot.df[1:10,]
mean(plot.df$mean)
sd(plot.df$mean)
plot.df |> group_by(Party) |> summarize(meanval = mean(mean), sdval = sd(mean))
plot.df |> group_by(Party) |> summarize(meanval = mean(mean), sdval = sd(mean))
dnorm(-1)
dnorm(1)
pnorm(1)
dim(threshold_4)
str(threshold_4)
threshold_3
mean(threshold_3)
intersection
overlap
q()
n
source("003_vanilla_model.R", echo = T)
source("003_vanilla_model.R", echo = T)
source("003_vanilla_model.R", echo = T)
source("003_vanilla_model.R", echo = T)
summary(fit)$summary |> as.data.frame() |> rownames_to_column("par") |> filter(par == "pcp")
data_list$Y
table(data_list$Y)
mean(data_list$Y == 3)
summary(fit)$summary |> as.data.frame() |> rownames_to_column("par") |> filter(par == "pcp")
q()
n
thetas <- readRDS(file = here::here("working", "partyonly_thetas.rds"))
thetas[1:3,]
thetas <- readRDS(file = here::here("working", "partyonly_fit.rds"))
dim(thetas)
head(thetas)
str(thetas)
q()
n
theta[1:!0,]
theta[1:10,]
canon[1,]
theta[1:3,]
theta[1,
]
theta[1,] |> as.data.frame()
which(theta$DisplayName_ok == FALSE)
which(theta$DisplayName_ok == FALSE)[1]
theta[which(theta$DisplayName_ok == FALSE)[1],]
theta[which(theta$DisplayName_ok == FALSE)[1],] |> as.data.frame()
theta[1:3,]
theta[1:£,]
theta[1:3,]
theta[1:£,]
theta[1:3,]
theta[1:10,]
cutoffs
library(shiny)
runApp("../shiny_pairwise/")
dat[1,]
source("002_model.R", echo = T)
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
runApp("../shiny_pairwise/")
q()
n
theta[1:!0,]
theta[1:10,]
nrow(theta)
theta |> group_by(Name, Constituency, Party) |> summarize(nrow = n()) |> ungroup() |> pull(nrow) |> unique()
q()
n
theta <- readRDS("../working/partyonly_theta_iters.rds")
theta[1:3,]
library(shiny)
runApp("../shiny_pairwise_mps/")
q()
n
head(dat)
which(dat$Name == "Diane ABBOTT")
diff(which(dat$Name == "Diane ABBOTT"))
table(diff(which(dat$Name == "Diane ABBOTT")))
head(dat)
canon[1,]
head(dat)
head(dat)
head(dat)
 pot(dat$mean_val, dat$mean_rank)
 plot(dat$mean_val, dat$mean_rank)
source("006_prepare_outputs.R", echo = T)
dat[1,]
source("006_prepare_outputs.R", echo = T)
cs
str(cells)
str(cs)
cells
q()
n
dat[1,]
q()
n
